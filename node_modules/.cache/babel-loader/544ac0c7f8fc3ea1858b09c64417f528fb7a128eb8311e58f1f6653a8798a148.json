{"ast":null,"code":"var _jsxFileName = \"/Users/nani/Desktop/presentation/fitness-tracker-MERN-main/project/client/src/components/SingleExercise.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useParams, Navigate, useNavigate } from 'react-router-dom';\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport Auth from '../utils/auth';\nimport { getCardioById, getResistanceById, updateCardio, updateResistance, deleteCardio, deleteResistance } from '../utils/API';\nimport { formatDate } from '../utils/dateFormat';\nimport Header from \"./Header\";\nimport cardioIcon from \"../assets/images/cardio-w.png\";\nimport resistanceIcon from \"../assets/images/resistance-w.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SingleExercise() {\n  _s();\n  const {\n    id,\n    type\n  } = useParams();\n  const [cardioData, setCardioData] = useState({});\n  const [resistanceData, setResistanceData] = useState({});\n  const updatedNameRef = useRef(null);\n  const updatedDistanceRef = useRef(null);\n  const updatedDurationRef = useRef(null);\n  const updatedWeightRef = useRef(null);\n  const updatedSetsRef = useRef(null);\n  const updatedRepsRef = useRef(null);\n  const loggedIn = Auth.loggedIn();\n  const navigate = useNavigate();\n  const displayExercise = useCallback(async exerciseId => {\n    //get token\n    const token = loggedIn ? Auth.getToken() : null;\n    if (!token) return false;\n\n    // fetch cardio data by id\n    if (type === \"cardio\") {\n      try {\n        const response = await getCardioById(exerciseId, token);\n        if (!response.ok) {\n          throw new Error('something went wrong!');\n        }\n        const cardio = await response.json();\n        cardio.date = formatDate(cardio.date);\n        setCardioData(cardio);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    // fetch resistance data by id\n    else if (type === \"resistance\") {\n      try {\n        const response = await getResistanceById(exerciseId, token);\n        if (!response.ok) {\n          throw new Error('something went wrong!');\n        }\n        const resistance = await response.json();\n        resistance.date = formatDate(resistance.date);\n        setResistanceData(resistance);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  }, [type, loggedIn]);\n  useEffect(() => {\n    displayExercise(id);\n  }, [id, displayExercise]); // Make sure to close the array with \"]\"\n\n  if (!loggedIn) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 16\n    }, this);\n  }\n  const handleDeleteExercise = async exerciseId => {\n    const token = loggedIn ? Auth.getToken() : null;\n    if (!token) return false;\n    confirmAlert({\n      title: \"Delete Exercise\",\n      message: \"Are you sure you want to delete this exercise?\",\n      buttons: [{\n        label: \"Cancel\"\n      }, {\n        label: \"Delete\",\n        onClick: async () => {\n          // delete cardio data\n          if (type === \"cardio\") {\n            try {\n              const response = await deleteCardio(exerciseId, token);\n              if (!response.ok) {\n                throw new Error('something went wrong!');\n              }\n            } catch (err) {\n              console.error(err);\n            }\n          }\n\n          // delete resistance data\n          else if (type === \"resistance\") {\n            try {\n              const response = await deleteResistance(exerciseId, token);\n              if (!response.ok) {\n                throw new Error('something went wrong!');\n              }\n            } catch (err) {\n              console.error(err);\n            }\n          }\n\n          // go back to history\n          navigate(\"/history\");\n        }\n      }]\n    });\n  };\n  // Assuming you have a function to get updated data from a form\n  const getUpdatedExerciseData = () => {\n    let updatedData = {};\n    if (type === 'cardio') {\n      updatedData = {\n        name: updatedNameRef.current.value,\n        distance: updatedDistanceRef.current.value,\n        duration: updatedDurationRef.current.value\n        // Add other cardio properties as needed\n      };\n    } else if (type === 'resistance') {\n      updatedData = {\n        name: updatedNameRef.current.value,\n        weight: updatedWeightRef.current.value,\n        sets: updatedSetsRef.current.value,\n        reps: updatedRepsRef.current.value\n        // Add other resistance properties as needed\n      };\n    }\n\n    return updatedData;\n  };\n\n  //handleupdate\n  const handleUpdateExercise = async () => {\n    const token = loggedIn ? Auth.getToken() : null;\n    if (!token) return false;\n    // Assuming you have a function to fetch updated data from a form or some other source\n    const updatedExerciseData = getUpdatedExerciseData();\n    try {\n      if (type === \"cardio\") {\n        const response = await updateCardio(id, updatedExerciseData, token);\n        if (!response.ok) {\n          throw new Error('something went wrong!');\n        }\n      } else if (type === \"resistance\") {\n        const response = await updateResistance(id, updatedExerciseData, token);\n        if (!response.ok) {\n          throw new Error('something went wrong!');\n        }\n      }\n\n      // Fetch and display the updated exercise data\n      displayExercise(id);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: type === \"cardio\" ? \"single-cardio\" : \"single-resistance\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title text-center\",\n      children: \"History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"single-exercise d-flex flex-column align-items-center text-center\",\n      children: [type === \"cardio\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardio-div \",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"cardio\",\n            src: cardioIcon,\n            className: \"exercise-form-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 68\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Date: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 24\n          }, this), \" \", cardioData.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 24\n          }, this), \" \", cardioData.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Distance: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 24\n          }, this), \" \", cardioData.distance, \" miles\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Duration: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 24\n          }, this), \" \", cardioData.duration, \" minutes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"updatedName\",\n          ref: updatedNameRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"updatedDistance\",\n          ref: updatedDistanceRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"updatedDuration\",\n          ref: updatedDurationRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-btn\",\n          onClick: () => handleDeleteExercise(id),\n          children: \"Delete Exercise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"update-btn\",\n          onClick: handleUpdateExercise,\n          children: \"Update Exercise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 40\n      }, this), type === \"resistance\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resistance-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"resistance\",\n            src: resistanceIcon,\n            className: \"exercise-form-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 68\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Date: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 24\n          }, this), \" \", resistanceData.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 24\n          }, this), \" \", resistanceData.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Weight: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 24\n          }, this), \" \", resistanceData.weight, \" lbs\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Sets: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 24\n          }, this), \" \", resistanceData.sets]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Reps: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 24\n          }, this), \" \", resistanceData.reps]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"updatedName\",\n          ref: updatedNameRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"updatedWeight\",\n          ref: updatedWeightRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"updatedSets\",\n          ref: updatedSetsRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"updatedReps\",\n          ref: updatedRepsRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-btn\",\n          onClick: () => handleDeleteExercise(id),\n          children: \"Delete Exercise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"update-btn\",\n          onClick: handleUpdateExercise,\n          children: \"Update Exercise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 9\n  }, this);\n}\n_s(SingleExercise, \"bgZ9n/b+OK1bTISdRYVC2ldyFWI=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = SingleExercise;\nvar _c;\n$RefreshReg$(_c, \"SingleExercise\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useParams","Navigate","useNavigate","confirmAlert","Auth","getCardioById","getResistanceById","updateCardio","updateResistance","deleteCardio","deleteResistance","formatDate","Header","cardioIcon","resistanceIcon","jsxDEV","_jsxDEV","SingleExercise","_s","id","type","cardioData","setCardioData","resistanceData","setResistanceData","updatedNameRef","updatedDistanceRef","updatedDurationRef","updatedWeightRef","updatedSetsRef","updatedRepsRef","loggedIn","navigate","displayExercise","exerciseId","token","getToken","response","ok","Error","cardio","json","date","err","console","error","resistance","to","fileName","_jsxFileName","lineNumber","columnNumber","handleDeleteExercise","title","message","buttons","label","onClick","getUpdatedExerciseData","updatedData","name","current","value","distance","duration","weight","sets","reps","handleUpdateExercise","updatedExerciseData","className","children","alt","src","ref","_c","$RefreshReg$"],"sources":["/Users/nani/Desktop/presentation/fitness-tracker-MERN-main/project/client/src/components/SingleExercise.js"],"sourcesContent":["import React, { useState, useEffect,useRef, useCallback } from 'react';\nimport { useParams, Navigate, useNavigate } from 'react-router-dom';\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nimport Auth from '../utils/auth';\nimport { getCardioById, getResistanceById, updateCardio, updateResistance, deleteCardio, deleteResistance } from '../utils/API';\nimport { formatDate } from '../utils/dateFormat';\nimport Header from \"./Header\";\nimport cardioIcon from \"../assets/images/cardio-w.png\"\nimport resistanceIcon from \"../assets/images/resistance-w.png\"\n\nexport default function SingleExercise() {\n    const { id, type } = useParams();\n    const [cardioData, setCardioData] = useState({})\n    const [resistanceData, setResistanceData] = useState({})\n   \n    const updatedNameRef = useRef(null);\n    const updatedDistanceRef = useRef(null);\n    const updatedDurationRef = useRef(null);\n    const updatedWeightRef = useRef(null);\n    const updatedSetsRef = useRef(null);\n    const updatedRepsRef = useRef(null);\n\n    const loggedIn = Auth.loggedIn();\n    const navigate = useNavigate();\n\n    const displayExercise = useCallback(async (exerciseId) => {\n        //get token\n        const token = loggedIn ? Auth.getToken() : null;\n        if (!token) return false;\n\n        // fetch cardio data by id\n        if (type === \"cardio\") {\n            try {\n                const response = await getCardioById(exerciseId, token);\n                if (!response.ok) { throw new Error('something went wrong!') }\n\n                const cardio = await response.json()\n                cardio.date = formatDate(cardio.date)\n                setCardioData(cardio)\n            } catch (err) { console.error(err) }\n        }\n\n        // fetch resistance data by id\n        else if (type === \"resistance\") {\n            try {\n                const response = await getResistanceById(exerciseId, token);\n                if (!response.ok) { throw new Error('something went wrong!') }\n\n                const resistance = await response.json()\n                resistance.date = formatDate(resistance.date)\n                setResistanceData(resistance)\n            } catch (err) { console.error(err) }\n        }\n    },[type,loggedIn]);\n\n    useEffect(() => {\n        displayExercise(id);\n    }, [id, displayExercise]); // Make sure to close the array with \"]\"\n\n    if (!loggedIn) {\n        return <Navigate to=\"/login\" />;\n    }\n\n    const handleDeleteExercise = async (exerciseId) => {\n        const token = loggedIn ? Auth.getToken() : null;\n        if (!token) return false;\n\n        confirmAlert({\n            title: \"Delete Exercise\",\n            message: \"Are you sure you want to delete this exercise?\",\n            buttons: [\n                {\n                    label: \"Cancel\",\n                },\n                {\n                    label: \"Delete\",\n                    onClick: async () => {\n                        // delete cardio data\n                        if (type === \"cardio\") {\n                            try {\n                                const response = await deleteCardio(exerciseId, token);\n                                if (!response.ok) { throw new Error('something went wrong!') }\n                            }\n                            catch (err) { console.error(err) }\n                        }\n\n                        // delete resistance data\n                        else if (type === \"resistance\") {\n                            try {\n                                const response = await deleteResistance(exerciseId, token);\n                                if (!response.ok) { throw new Error('something went wrong!') }\n                            }\n                            catch (err) { console.error(err) }\n                        }\n\n                        // go back to history\n                        navigate(\"/history\")\n                    }\n                }\n            ]\n        });\n    }\n // Assuming you have a function to get updated data from a form\n const getUpdatedExerciseData = () => {\n        let updatedData = {};\n\n        if (type === 'cardio') {\n            updatedData = {\n                name: updatedNameRef.current.value,\n                distance: updatedDistanceRef.current.value,\n                duration: updatedDurationRef.current.value,\n                // Add other cardio properties as needed\n            };\n        } else if (type === 'resistance') {\n            updatedData = {\n                name: updatedNameRef.current.value,\n                weight: updatedWeightRef.current.value,\n                sets: updatedSetsRef.current.value,\n                reps: updatedRepsRef.current.value,\n                // Add other resistance properties as needed\n            };\n        }\n\n        return updatedData;\n    };\n\n    //handleupdate\n    const handleUpdateExercise = async () => {\n        const token = loggedIn ? Auth.getToken() : null;\n        if (!token) return false;\n        // Assuming you have a function to fetch updated data from a form or some other source\n        const updatedExerciseData = getUpdatedExerciseData();\n\n        try {\n            if (type === \"cardio\") {\n                const response = await updateCardio(id, updatedExerciseData, token);\n                if (!response.ok) { throw new Error('something went wrong!') }\n            } else if (type === \"resistance\") {\n                const response = await updateResistance(id, updatedExerciseData, token);\n                if (!response.ok) { throw new Error('something went wrong!') }\n            }\n\n            // Fetch and display the updated exercise data\n            displayExercise(id);\n        } catch (err) {\n            console.error(err);\n        }\n    };\n\n   \n\n\n    return (\n        <div className={type === \"cardio\" ? \"single-cardio\" : \"single-resistance\"}>\n            <Header />\n            <h2 className='title text-center'>History</h2>\n           \n            <div className=\"single-exercise d-flex flex-column align-items-center text-center\">\n                {type === \"cardio\" && (<div className='cardio-div '>\n                    <div className='d-flex justify-content-center'><img alt=\"cardio\" src={cardioIcon} className=\"exercise-form-icon\" /></div>\n                    <p><span>Date: </span> {cardioData.date}</p>\n                    <p><span>Name: </span> {cardioData.name}</p>\n                    <p><span>Distance: </span> {cardioData.distance} miles</p>\n                    <p><span>Duration: </span> {cardioData.duration} minutes</p>\n                    <input type=\"text\" id=\"updatedName\" ref={updatedNameRef} />\n            <input type=\"text\" id=\"updatedDistance\" ref={updatedDistanceRef} />\n            <input type=\"text\" id=\"updatedDuration\" ref={updatedDurationRef} />\n                    <button className='delete-btn' onClick={() => handleDeleteExercise(id)}>Delete Exercise</button>\n                    <button className='update-btn' onClick={handleUpdateExercise}>Update Exercise</button>\n                </div>)}\n                {type === \"resistance\" && (<div className='resistance-div'>\n                    <div className='d-flex justify-content-center'><img alt=\"resistance\" src={resistanceIcon} className=\"exercise-form-icon\" /></div>\n                    <p><span>Date: </span> {resistanceData.date}</p>\n                    <p><span>Name: </span> {resistanceData.name}</p>\n                    <p><span>Weight: </span> {resistanceData.weight} lbs</p>\n                    <p><span>Sets: </span> {resistanceData.sets}</p>\n                    <p><span>Reps: </span> {resistanceData.reps}</p>\n                    <input type=\"text\" id=\"updatedName\" ref={updatedNameRef} />\n            <input type=\"text\" id=\"updatedWeight\" ref={updatedWeightRef} />\n            <input type=\"text\" id=\"updatedSets\" ref={updatedSetsRef} />\n            <input type=\"text\" id=\"updatedReps\" ref={updatedRepsRef} />\n                    <button className='delete-btn' onClick={() => handleDeleteExercise(id)}>Delete Exercise</button>\n                    <button className='update-btn' onClick={handleUpdateExercise}>Update Exercise</button>\n                </div>)}\n            </div>\n\n            \n\n        </div>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}